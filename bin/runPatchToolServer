#!/bin/sh
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | Copyright held by original author
#    \\/     M anipulation  |
#------------------------------------------------------------------------------
# License
#     This file is part of OpenFOAM.
#
#     OpenFOAM is free software; you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by the
#     Free Software Foundation; either version 2 of the License, or (at your
#     option) any later version.
#
#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#     for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM; if not, write to the Free Software Foundation,
#     Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
#
# Script
#     runPatchToolServer
#
# Description
#     Startup script for FoamX case preprocessor.
#
#------------------------------------------------------------------------------

#- Set some system specifics
case `uname -s` in
  HP-UX*)
    UNIX95=a; export UNIX95
    ;;
  IRIX*)
    _XPG=1; export _XPG
    ;;
esac
COLUMNS=200
export COLUMNS


printUsage() {
    echo "Usage: `basename $0` <root> <case>"
    echo ""
    echo "Starts the Foam Patching Tool server (Name Server, patchToolServer)"
    echo ""
}


# getValue file var
#   Prints value of 'var=value' in file.
getValue() {
    val=`grep "^[ \t]*$2[ \t]*=" $1 | sed -e "s/^[ \t]*$2[ \t]*=//" | head -1`
    if [ -z "$val" ]; then
        return 1
    fi
    echo "$val"
    return 0
}

# cleanup
# removes all excess processes and files. Used in signal handler
cleanup() {
    echo "`basename $0` : cleanup"

    #- reset traps
    trap 0 2 3 15

    #- Did we start up something?
    if [ "$NSD_PID" ]; then
        kill $NSD_PID
        rm -f $FOAMX_CONFIG/ns2.ref
    fi
    NSD_PID=''
}

#-------------------------
#
# Main.
#
#-------------------------

# Make sure that the FoamX client configuration file is available.
if [ ! -r "$FOAMX_CONFIG/FoamXClient.cfg" ] ; then
    echo "Can't find FoamX FoamXClient.cfg file in $FOAMX_CONFIG."
    exit 1
fi

# Make sure that the FoamX system directory is available.
if [ ! -d "$FOAMX_CONFIG" ] ; then
    echo "Can't find FoamX system directory at $FOAMX_CONFIG."
    exit 1
fi

# Get host and port from FoamX client client configuration file.
HOSTNAME=`getValue "$FOAMX_CONFIG/FoamXClient.cfg" 'org.omg.CORBA.ORBInitialHost'`
if [ $? -ne 0 ]; then
    HOSTNAME=`uname -n`
fi
HOSTPORT=`getValue "$FOAMX_CONFIG/FoamXClient.cfg" 'org.omg.CORBA.ORBInitialPort'`
if [ $? -ne 0 ]; then
    HOSTPORT=1234
fi
HOSTPORT=`expr $HOSTPORT + 1`
myIOP="inet:$HOSTNAME:$HOSTPORT"

if [ $# -ne 2 ]; then
    printUsage
    exit 1
fi

caseRoot=$1
caseName=$2

if [ ! -d "$caseRoot/$caseName" ]; then
    echo "`basename $1` : Cannot read directory $caseRoot/$caseName"
    printUsage
    exit 1
fi

#- Cleanup processes started by me
NSD_PID=''
trap cleanup 0 2 3 15

if [ -r $FOAMX_CONFIG/ns2.ref ]; then
    echo "Using server reference $FOAMX_CONFIG/ns2.ref"
else
    echo "Starting NameServer (nsd) with $myIOP ..."

    nsd -ORBIIOPAddr $myIOP --ior $FOAMX_CONFIG/ns2.ref </dev/null &
    NSD_PID=$!

    while [ ! -f $FOAMX_CONFIG/ns2.ref ]
    do
        sleep 1
    done
fi

echo "Starting Foam PatchToolServer with $myIOP ..."
PatchToolServer -ORBNamingAddr $myIOP $caseRoot $caseName

# Implicit trap 0

#------------------------------------------------------------------------------
